rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Allow any authenticated user to read any document.
    // This is necessary for features like leaderboards, profiles, etc.
    // Writes are still restricted below.
    match /{path=**} {
      allow get, list: if request.auth != null;
    }

    // Users can only read and write to their own user document.
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
    }

    // Users can manage their own subcollections.
    match /users/{userId}/{collection}/{docId} {
      allow read, write, delete: if request.auth.uid == userId;
    }

    // Public collections that anyone can read.
    match /(announcements|resources|resourceSections|dailySurprises|polls|quizzes|appConfig|featureShowcases|globalGifts)/{document=**} {
      allow get, list: if true;
    }

    // Admins can write to public collections.
    match /(announcements|resources|resourceSections|dailySurprises|polls|quizzes|appConfig|featureShowcases|globalGifts)/{document=**} {
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.uid == 'user_32WgV1OikpqTXO9pFApoPRLLarF';
    }

    // Authenticated users can vote on polls.
    match /polls/{pollId} {
        allow update: if request.auth != null && 'results' in request.resource.data;
    }
    
    // Authenticated users can create support tickets for themselves.
    match /supportTickets/{ticketId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      // Admins can read/update/delete any ticket.
      allow read, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.uid == 'user_32WgV1OikpqTXO9pFApoPRLLarF';
    }

    // Private chats between two users.
    match /chats/{chatId} {
        allow read, write: if request.auth.uid in resource.data.users;
        match /messages/{messageId} {
            allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
        }
    }
    
    // Global chat rules
    match /global_chat/{messageId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.senderId;
    }
    
    // Friend Requests
    match /friendRequests/{requestId} {
        allow read, create, delete: if request.auth.uid == resource.data.senderId || request.auth.uid == resource.data.receiverId;
    }
    
    // Referral Requests
    match /referrals/{referralId} {
        // The user who used the code can create the request.
        allow create: if request.auth.uid == request.resource.data.newUserId;
        // Only admins can read/update the request.
        allow read, update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.uid == 'user_32WgV1OikpqTXO9pFApoPRLLarF';
    }
  }
}
